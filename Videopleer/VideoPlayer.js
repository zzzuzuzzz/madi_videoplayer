import { PlaylistLoader } from './playListLoader.js';

export class VideoPlayer {
    constructor() {
        this.playlistLoader = new PlaylistLoader();
        this.content = [];
        this.currentIndex = 0;
        this.autoplay = false;

        // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        this.autoplayButton = document.getElementById('autoplayButton');
        this.prevButton = document.getElementById('prevButton');
        this.nextButton = document.getElementById('nextButton');
        // this.htmlButtonPause = document.getElementById("mainVideo");

        // –ü–æ–ª—É—á–∞–µ–º –º–µ–¥–∏–∞ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.imageElement = document.getElementById('imagesContainer');
        this.videoElement = document.getElementById('mainVideo');
        this.imageTimeout = null;
        this.boundChangeContent = null; //! –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        this.init();
    }

    async init() {
        await this.playlistLoader.loadContent();
        this.content = this.playlistLoader.getContent();
        this.setupEventListeners();
        this.changeMedia(this.currentIndex);
        this.generatePlaylist();
    }

    // todo –í—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—Ü–Ω–∫—Ü–∏–∏ —É–±—Ä–∞—Ç—å —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ!
    setupEventListeners() {
        this.autoplayButton.addEventListener('click', () => this.toggleAutoplay());
        this.prevButton.addEventListener('click', () => this.changeContent(-1));
        this.nextButton.addEventListener('click', () => this.changeContent(1));
        // this.htmlButtonPause.addEventListener('click', () => this.pauseVideo());
    }

    // pauseVideo() {
    //     // const autoPlay = !this.autoplay
    //     const htmlButtonPause = this.htmlButtonPause
    //         if (htmlButtonPause.addEventListener('pause')) {
    //             this.autoplay = false;
    //             this.toggleAutoplay();
    //         }
    // }

    generatePlaylist() {
        const thumbnailsContainer = document.querySelector('.thumbnails');
        thumbnailsContainer.innerHTML = '';

        this.content.forEach((media, index) => {
            const thumbnailDiv = document.createElement('div');
            thumbnailDiv.classList.add('thumbnail');

            if (media.isVideo) {
                thumbnailDiv.classList.add('thumbnail-video');
            }

            thumbnailDiv.setAttribute('data-index', index);

            const typeIcon = media.isVideo ? '‚ñ∂Ô∏è' : 'üñºÔ∏è';

            thumbnailDiv.innerHTML = `
                <img src="${media.thumbnail || media.src}" alt="${media.title}">
                <span>${typeIcon} ${media.title}</span>
            `;

            thumbnailDiv.addEventListener('click', () => {
                this.currentIndex = index;
                this.changeMedia(index);
            });

            thumbnailsContainer.appendChild(thumbnailDiv);
        });

        this.highlightCurrentThumbnail(this.currentIndex);
    }

    // untieChangeMedia() {
    //     this.changeContent.bind(this, 1);
    // };

    //     dontChangeMedia () {
    //     this.untieChangeMedia.bind(this.changeContent, 1);
    // }


    playOnAuto() {
        if (!this.autoplay) {
            return;
        }

        const element = this.content[this.currentIndex];

        if (element.isVideo) {
            this.videoElement.play().catch(error => {
                console.warn('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ', error);
                return
            });
            /* –û—Ç–∫—Ä–æ–π –∏ –ø–æ—á–∏—Ç–∞–π
            1. { once: true } - –ï—Å–ª–∏ true, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –ø–æ—Å–ª–µ —á–µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—Å—è
            2. bind - –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç null - –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            */
            //! –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ—ë
            /*
            –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ –∫–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ .bind() —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é.
            –¢–µ–ø–µ—Ä—å, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –º—ã –º–æ–∂–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –µ—ë —É–¥–∞–ª—è—Ç—å,
            —á—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è.
            */
            this.boundChangeContent = this.changeContent.bind(this, 1);
            this.videoElement.addEventListener('ended', this.boundChangeContent, { once: true });

        } else {
            this.imageTimeout = setTimeout(() => {
                this.changeContent(1);
            }, 3000);
        }
    }

    changeMedia(index) {
        // todo –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–∞–π–º–µ—Ä
        if (this.imageTimeout) {
            clearTimeout(this.imageTimeout);
            this.imageTimeout = null;
        }

        //! –ü—Ä–∞–≤–∏–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é
        if (this.boundChangeContent) {
            this.videoElement.removeEventListener('ended', this.boundChangeContent);
            this.boundChangeContent = null;
        }

        const elementContent = this.content[index];
        this.currentIndex = index;

        if (elementContent.isVideo) {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–µ–æ
            this.imageElement.classList.remove("active");
            this.imageElement.classList.add("exit");
            this.videoElement.classList.remove("active");
            this.videoElement.src = elementContent.src;
            this.videoElement.classList.remove("exit");
            setTimeout(() => {
                this.videoElement.classList.add("active");
            });
        }
        else {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            this.videoElement.classList.remove("active");
            this.videoElement.classList.add("exit");
            this.videoElement.pause();
            this.imageElement.classList.remove("active");
            this.imageElement.src = elementContent.src;
            this.imageElement.classList.remove("exit");
            setTimeout(() => {
                this.imageElement.classList.add("active");
            });
        }


        this.highlightCurrentThumbnail(index);
        if (this.autoplay) {
            this.playOnAuto();
        }
    }

    highlightCurrentThumbnail(index) {
        const thumbnails = document.querySelectorAll('.thumbnail');
        thumbnails.forEach((thumb, i) => {
            thumb.classList.remove('active');
            if (i === index) {
                thumb.classList.add('active');
                thumb.scrollIntoView({
                    behavior: 'smooth',
                    block: 'nearest'
                });
            }
        });
    }

    toggleAutoplay() {
        this.autoplay = !this.autoplay;
        this.autoplayButton.classList.toggle('active', this.autoplay);
        if (this.autoplay) {
            this.playOnAuto();
        } else {
            this.videoElement.pause();
            //! –ü—Ä–∞–≤–∏–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é
            if (this.boundChangeContent) {
                this.videoElement.removeEventListener('ended', this.boundChangeContent);
                this.boundChangeContent = null;
            }
            if (this.imageTimeout) {
                clearTimeout(this.imageTimeout);
                this.imageTimeout = null;
            }
        }
    }
    changeContent(direction) {
        //*
        this.currentIndex = (this.currentIndex + direction + this.content.length) % this.content.length;
        this.changeMedia(this.currentIndex);
    }
}
